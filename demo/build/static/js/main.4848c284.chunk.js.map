{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["green","red","border","gray","darkBlue","lightGray","Header","styled","div","Dashboard","ExecutedTrades","Instrument","OrderBook","generateLimitOrder","marketPrice","minQuantity","maxQuantity","rand","Math","random","price","type","quantity","App","props","buys","sells","i","order","push","sort","a","b","state","bias","percentMove","volume","instrument","name","ticker","earningPerShare","totalShares","chartRef","React","createRef","addOrder","bind","setInterval","this","chart","createChart","current","timeScale","timeVisible","secondsVisible","rightPriceScale","scaleMargins","top","bottom","borderVisible","layout","backgroundColor","textColor","grid","vertLines","color","horzLines","chartSeries","addAreaSeries","topColor","bottomColor","lineColor","lineWidth","length","generateMarketOrder","console","log","quantityTraded","shift","update","value","time","Date","now","setState","topBuys","slice","topSells","buyOrders","map","className","toFixed","sellOrders","id","class","onChange","e","target","ref","src","alt","style","Intl","NumberFormat","maximumSignificantDigits","notation","format","background","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4848c284.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport { createChart } from 'lightweight-charts';\n\nconst green = \"rgb(65, 199, 122)\";\nconst red = \"rgb(242, 59, 105)\";\nconst border = \"5px solid rgba(0, 0, 0, .3)\";\nconst gray = \"rgba(0,0,0,0.3)\";\nconst darkBlue = \"#131722\";\nconst teal = \"rgba(38,198,218, 1)\";\nconst lightGray = \"rgba(255,255,255,0.6)\";\n\nconst Header = styled.div`\n  height: 40px;\n  background: ${darkBlue};\n  color: white;\n  padding: 10px 2%;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  border-bottom: 1px solid ${gray};\n\n  #right {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n  }\n\n  #left {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n  }\n\n  #title {\n    font-size: 30px;\n    i {\n      margin-right: 12px;\n    }\n  }\n\n  #login {\n    border: 1px solid ${teal};\n    background: rgba(38,198,218, .1);\n    padding: 6px 10px;\n    border-radius: 4px;\n    cursor: pointer;\n    &:hover {\n      transition: .1s all;\n      background: rgba(38,198,218, .2);\n    }\n  }\n\n  .input {\n    margin: 0px 20px;\n    display: flex;\n    align-items: center;\n    div {\n      display: inline-block;\n      color: black;\n      background-color: ${lightGray};\n      border-top-left-radius: 4px;\n      border-bottom-left-radius: 4px;\n      padding: 6px 10px;\n      width: 30px;\n      text-align: right;\n    }\n    input {\n      padding: 7px 10px;\n      width: 30px;\n      background: rgba(255,255,255,0.1);\n      color: white;\n      border: 1px solid ${lightGray};\n      border-top-right-radius: 4px;\n      border-bottom-right-radius: 4px;\n    }\n  }\n`;\n\nconst Dashboard = styled.div`\n  display: flex;\n  justify-content: space-evenly;\n  flex-wrap: wrap-reverse;\n  #right-panel {\n    margin: 10px;\n    min-width: 350px;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n  }\n`;\n\nconst ExecutedTrades = styled.div`\n  height: calc(100vh - 80px);\n  width: calc(100vw - 390px);\n  min-width: 340px;\n  margin: 10px 0px 10px 10px;\n`;\n\nconst Instrument = styled.div`\n  border: ${border};\n  background: ${darkBlue};\n  height: 150px;\n  display: flex;\n  margin-bottom: 10px;\n  flex-grow: 1;\n\n  #headshot { \n    display: inline-block;\n    height: 100%;\n\n    img {\n      height: 100%;\n    }\n  }\n  #info {\n    flex-grow: 1;\n    padding: 10px 20px;\n    color: white;\n    #name { \n      margin-bottom: 2px;\n    }\n    #ticker { \n      color: ${lightGray};\n      margin-bottom: 20px;\n    }\n    #stats {\n      text-align: right;\n      .stat {\n        .value {\n          width: 70px;\n          color: ${lightGray};\n        }\n        div {\n          display: inline-block;\n        }\n      }\n    }\n\n  }\n`;\n\nconst OrderBook = styled.div`\n  background: ${darkBlue};\n  border: ${border};\n  color: white;\n  padding: 10px;\n\n  .title {\n    text-align: center;\n    margin-bottom: 10px;\n  }\n\n  .header {\n    display: flex;\n    justify-content: space-between;\n    border-bottom: .1px solid ${lightGray};\n    padding-bottom: 5px;\n    margin-bottom: 8px;\n  }\n\n  #spread {\n    display: flex;\n    justify-content: space-between;\n    text-align: right;\n    padding: 10px;\n\n    #arrow { \n      margin-left: 5px;\n    }\n  }\n\n  #buys {\n  }\n\n  #sells {\n    display: flex;\n    flex-direction: column-reverse;\n  }\n\n  .order {\n    display: flex;\n    justify-content: space-between;\n    padding: 2px;\n    &:nth-child(odd) {\n      background: ${gray};\n    }\n  }\n\n  .buy-order {\n    .price {\n      color: ${green};\n    }\n  }\n\n  .sell-order {\n    .price {\n      color: ${red};\n    }\n  }\n`;\n\n\n\nfunction generateMarketOrder(bias, buys, sells, minQuantity, maxQuantity) {\n  const type = Math.random() > bias ? 'SELL' : 'BUY';\n  let marketPrice = 50;\n  if (type === 'BUY' && sells.length > 0) {\n    marketPrice = sells[0].price\n  } else if (buys.length > 0) {\n    marketPrice = buys[0].price;\n  }\n  const quantity = (Math.random() * (minQuantity + maxQuantity)) + minQuantity;\n  return { price: marketPrice, type, quantity };\n}\n\nfunction generateLimitOrder(marketPrice, minQuantity, maxQuantity) {\n  const rand = Math.random() * marketPrice * 2;\n  const type = rand > marketPrice ? 'SELL' : 'BUY';\n  const price = rand;\n  const quantity = (Math.random() * (minQuantity + maxQuantity)) + minQuantity;\n  return { price, type, quantity };\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    const buys = [];\n    const sells = [];\n    const marketPrice = 50;\n    for (let i = 0; i <= 1000; i++) {\n      const order = generateLimitOrder(marketPrice, 40, 80);\n      if (order.type === 'BUY') {\n        buys.push(order)\n      } else {\n        sells.push(order)\n      }\n    }\n\n    buys.sort((a, b) => (a.price < b.price ? 1 : -1));\n    sells.sort((a, b) => (a.price > b.price ? 1 : -1));\n    this.state = {\n      bias: .5,\n      buys,\n      sells,\n      marketPrice: sells[0].price,\n      percentMove: 0,\n      volume: 100000,\n      instrument: {\n        name: \"Matthew Wolff\",\n        ticker: \"WOLFF\",\n        earningPerShare: 30,\n        totalShares: 1000000,\n      }\n    };\n    this.chartRef = React.createRef();\n    this.addOrder = this.addOrder.bind(this);\n  }\n\n  componentDidMount() {\n    setInterval(this.addOrder, 100);\n    this.chart = createChart(this.chartRef.current, {\n      timeScale: {\n        timeVisible: true,\n        secondsVisible: false,\n      },\n      rightPriceScale: {\n        scaleMargins: {\n          top: 0.3,\n          bottom: 0.25,\n        },\n        borderVisible: false,\n      },\n      layout: {\n        backgroundColor: '#131722',\n        textColor: '#d1d4dc',\n      },\n      grid: {\n        vertLines: {\n          color: 'rgba(42, 46, 57, 0)',\n        },\n        horzLines: {\n          color: 'rgba(42, 46, 57, 0.6)',\n        },\n      },\n    });\n    this.chartSeries = this.chart.addAreaSeries({\n      topColor: 'rgba(38,198,218, 0.6)',\n      bottomColor: 'rgba(38,198,218, 0.05)',\n      lineColor: 'rgba(38,198,218, 1)',\n      lineWidth: 2,\n    });\n  }\n\n  addOrder() {\n    let { buys, sells, volume, marketPrice, bias} = this.state;\n    const order = generateMarketOrder(bias, buys, sells, 5, 15);\n    console.log(order);\n    if (order.type === 'BUY') {\n      buys.push(order)\n      buys.sort((a, b) => (a.price < b.price ? 1 : -1));\n    } else {\n      sells.push(order)\n      sells.sort((a, b) => (a.price > b.price ? 1 : -1));\n    }\n\n    let quantityTraded = 0;\n    while (buys.length > 0 && sells.length > 0 && buys[0].price >= sells[0].price) {\n      if (buys[0].quantity > sells[0].quantity) {\n        buys[0].quantity -= sells[0].quantity;\n        quantityTraded += sells[0].quantity\n        sells.shift();\n      } else if (sells[0].quantity > buys[0].quantity) {\n        sells[0].quantity -= buys[0].quantity\n        quantityTraded += buys[0].quantity\n        buys.shift();\n      } else {\n        quantityTraded += buys[0].quantity\n        buys.shift();\n        sells.shift();\n      } \n    }\n    \n    this.chartSeries.update({\n      value: order.price,\n      time: Date.now(),\n    });\n    this.setState({\n      buys,\n      sells,\n      marketPrice: order.price,\n      percentMove: (order.price - marketPrice) / marketPrice,\n      volume: volume + quantityTraded,\n    });\n  }\n  \n  render() {\n    const { buys, sells, bias, marketPrice, percentMove, instrument, volume } = this.state;\n    const topBuys = buys.slice(0, 12);\n    const topSells = sells.slice(0, 12);\n\n    const buyOrders = topBuys.map(({price, quantity, type}) => (\n      <div className=\"buy-order order\">\n        <div className=\"quantity\">{quantity.toFixed(2)}</div>\n        <div className=\"price\">${price.toFixed(2)}</div>\n      </div>\n    ));\n\n    const sellOrders = topSells.map(({price, quantity, type}) => (\n      <div className=\"sell-order order\">\n        <div className=\"quantity\">{quantity.toFixed(2)}</div>\n        <div className=\"price\">${price.toFixed(2)}</div>\n      </div>\n    ));\n\n\n    return (\n      <>\n        <Header>\n          <div id=\"left\">\n            <div id=\"title\"><i class=\"fas fa-spinner\" />Nexus</div>\n            <div class=\"input\">\n              <div>Bias</div>\n              <input value={bias} onChange={(e) => this.setState({ bias: e.target.value })}></input>\n            </div>\n          </div>\n          <div id=\"right\">\n            <div id=\"login\">Login</div>\n          </div>\n        </Header>\n        <Dashboard>\n          <ExecutedTrades ref={this.chartRef} />\n          <div id=\"right-panel\">\n            <Instrument>\n              <div id=\"headshot\">\n                <img src='./headshots/mwolff.webp' alt=\"headshot\"/>\n              </div>\n              <div id=\"info\">\n                <div id=\"name\">{instrument.name}</div>\n                <div id=\"ticker\">\n                  ${instrument.ticker}\n                  <div id=\"market-price\" style={{ color: percentMove > 0 ? green : red }}>\n                    ${marketPrice.toFixed(2)}\n                    {percentMove > 0 ? (\n                      <i id=\"arrow\" class=\"fas fa-arrow-up\" />\n                    ) : (\n                      <i id=\"arrow\" class=\"fas fa-arrow-down\" />\n                    )}\n                  </div>\n                </div>\n                <div id=\"stats\">\n                  <div class=\"stat\">\n                    <div class=\"name\">Vol</div>\n                    <div class=\"value\">{new Intl.NumberFormat('en-US', { maximumSignificantDigits: 5, notation: \"compact\" }).format(volume)}</div>\n                  </div>\n                  <div class=\"stat\">\n                    <div class=\"name\">P/E</div>\n                    <div class=\"value\">{(marketPrice / instrument.earningPerShare).toFixed(2)}</div>\n                  </div>\n                  <div class=\"stat\">\n                    <div class=\"name\">Mkt Cap</div>\n                    <div class=\"value\">{new Intl.NumberFormat('en-US', { maximumSignificantDigits: 3, notation: \"compact\" }).format(instrument.totalShares * marketPrice)}</div>\n                  </div>\n                </div>\n              </div>\n            </Instrument>\n            <OrderBook>\n              <div className=\"title\">Order Book</div>\n              <div className=\"header\">\n                <div>Quantity</div>\n                <div>Price</div>\n              </div>\n              <div id=\"sells\">\n                {sellOrders}\n              </div>\n              <div id=\"spread\" style={{ background: percentMove > 0 ? \"rgb(65, 199, 122, 0.06)\" : \"rgba(242, 59, 105, 0.06)\" }}>\n                <div id=\"percent-move\" style={{ color: percentMove > 0 ? green : red }}>\n                  {(percentMove * 100).toFixed(2)}%\n                </div>\n                <div id=\"market-price\" style={{ color: percentMove > 0 ? green : red }}>\n                  ${marketPrice.toFixed(2)}\n                  {percentMove > 0 ? (\n                    <i id=\"arrow\" class=\"fas fa-arrow-up\" />\n                  ) : (\n                    <i id=\"arrow\" class=\"fas fa-arrow-down\" />\n                  )}\n                </div>\n              </div>\n              <div id=\"buys\">\n                {buyOrders}\n              </div>\n            </OrderBook>\n          </div>\n        </Dashboard>\n      </>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}